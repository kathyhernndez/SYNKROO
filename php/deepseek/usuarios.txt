<?php
session_start();
include 'conexion_be.php';
include 'registrar_accion.php';


/// plantillas front
include 'barra_izquierda.php';
include 'barra_superior.php';



// Verificar si el usuario ha iniciado sesión
if (!isset($_SESSION['loggedin']) || $_SESSION['loggedin'] !== true) {
    echo '
    <script>
    alert("Por Favor debes Iniciar Sesion");
    window.location = "../index.php";
    </script>
    ';
    session_destroy();
    die();
}

// Verificar si el usuario tiene el rol adecuado (id_roles igual a 1 o 2)
if (!isset($_SESSION['id_roles']) || ($_SESSION['id_roles'] != 1 && $_SESSION['id_roles'] != 2)) {
    echo '
    <script>
    alert("No tienes permisos para acceder a esta vista");
    window.location = "menu.php";
    </script>
    ';
    die();
}

// Configuración de cabeceras para evitar el caché
header("Cache-Control: no-cache, must-revalidate"); // HTTP 1.1 
header("Pragma: no-cache"); // HTTP 1.0 
header("Expires: Wed, 12 Nov 2024 10:48:00 GMT");

// Verificar si hay un mensaje de sesión y mostrarlo
if (isset($_SESSION['message'])) {
    echo '
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        ' . $_SESSION['message'] . '
    </div>';
    unset($_SESSION['message']);
}

if (isset($message)) { 
    echo ' 
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
     ' . $message . ' 
    </div> 
    '; 
}
?>

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="../assets/image/favicon.png" />
    <title>Gestión Usuarios</title>
    <link rel="stylesheet" href="../assets/css/main.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
</head>
<body>
    <style>
        /* Estilos para el botón de filtrado */
.filter-btn {
    background-color: #ff8c42; /* Fondo naranja */
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    display: flex;
    align-items: center;
    gap: 8px;
}

.filter-btn i {
    font-size: 18px;
}

/* Estilos para el menú desplegable de filtrado */
.filter-dropdown {
    display: none; /* Oculto por defecto */
    position: absolute;
    background-color: #f5f5f5; /* Fondo blanco hueso */
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 15px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    z-index: 1000;
    margin-top: 10px;
}

/* Estilos para los grupos de filtros */
.filter-group {
    margin-bottom: 10px;
}

.filter-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
    color: #333; /* Letras negras en modo claro */
}

/* Estilos para los selects */
.filter-select {
    width: 100%;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 5px; /* Borde redondeado */
    font-size: 14px;
    background-color: white; /* Fondo blanco */
    color: #333; /* Letras negras */
    cursor: pointer;
}

/* Estilos para el botón de aplicar filtros */
.apply-filter-btn {
    background-color: #ff8c42; /* Fondo naranja */
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
    width: 100%;
    margin-top: 10px;
}

.apply-filter-btn:hover {
    background-color: #e67e22; /* Naranja más oscuro al pasar el mouse */
}
/* Estilos para el modo oscuro */
body.dark-mode .filter-dropdown {
    background-color: #333; /* Fondo negro en modo oscuro */
    border-color: #555;
}

body.dark-mode .filter-group label {
    color: #fff; /* Letras blancas en modo oscuro */
}

body.dark-mode .filter-select {
    background-color: #444; /* Fondo oscuro para selects */
    color: #fff; /* Letras blancas */
    border-color: #555;
}

body.dark-mode .apply-filter-btn {
    background-color: #e67e22; /* Naranja más oscuro en modo oscuro */
}

/* Estilos para el modal de confirmación */
#confirm-modal {
    display: none;
    position: fixed;
    z-index: 1001;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    justify-content: center;
    align-items: center;
}

#confirm-modal .modal-content {
    background-color: #f5f5f5;
    padding: 20px;
    border-radius: 10px;
    width: 300px;
    text-align: center;
}

#confirm-modal .close-modal {
    float: right;
    cursor: pointer;
    font-size: 20px;
}

#confirm-modal .password-container {
    position: relative;
    margin-bottom: 15px;
}

#confirm-modal .password-container input {
    width: 100%;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

#confirm-modal .toggle-password-btn {
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    cursor: pointer;
    color: #ff8c42;
}

#confirm-modal .confirm-btn {
    background-color: #ff8c42;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
}

#confirm-modal .confirm-btn:hover {
    background-color: #e67e22;
}

/* Estilos para modo oscuro */
body.dark-mode #confirm-modal .modal-content {
    background-color: #333;
    color: white;
}

body.dark-mode #confirm-modal .password-container input {
    background-color: #444;
    color: white;
    border-color: #555;
}

body.dark-mode #confirm-modal .toggle-password-btn {
    color: #e67e22;
}
    </style>
    <div class="dashboard">
         <!-- Barra lateral izquierda (menú) -->
        

        <!-- Contenido principal -->
         
         <!-- Barra superior -->
        <div class="main-content">

            <!-- Contenido del dashboard -->
            <div class="content">
               
                <!-- Contenedor de usuarios -->
                <div class="files-container">
                    <!-- Filtros y barra de búsqueda -->
                    <div class="filters">

                    <div class="filters">
    <button class="filter-btn" id="filter-btn">
        <i class="fas fa-filter"></i> Filtrar
    </button>
    <!-- Menú desplegable de filtrado -->
    <div class="filter-dropdown" id="filter-dropdown">
        <!-- Filtro por Rol -->
        <div class="filter-group">
            <label>Rol:</label>
            <select id="filter-rol" class="filter-select">
                <option value="">Todos</option>
                <option value="2">SuperAdmin</option>
                <option value="1">Admin</option>
                <option value="3">Personal</option>
            </select>
        </div>
        <!-- Filtro por Estado -->
        <div class="filter-group">
            <label>Estado:</label>
            <select id="filter-estado" class="filter-select">
                <option value="">Todos</option>
                <option value="1">Activo</option>
                <option value="0">Inactivo</option>
            </select>
        </div>
        <!-- Botón para aplicar filtros -->
        <button class="apply-filter-btn" id="apply-filter-btn">Aplicar Filtros</button>
    </div>
</div>

        <!-- Barra de búsqueda -->
        <input type="text" id="search-bar" class="search-bar" placeholder="Buscar por nombre, apellido o correo...">

        
    <!-- Botón para crear usuario -->
    <button class="create-user-btn" id="create-user-btn"><i class="fas fa-user-plus"></i> Crear Usuario</button>
</div>

                    
<table class="user-table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>Cédula</th>
            <th>Correo</th>
            <th>Estado</th>
            <th>Nivel Acceso</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
       <?php 
                include 'get_usuarios.php';
                ?>
    </tbody>
</table>

                    
                </div>
            </div>
        </div>
    </div>


    <!-- Modal de confirmación para bloquear/desbloquear usuario -->
<div class="modal" id="confirm-modal">
    <div class="modal-content">
        <span class="close-modal" id="close-confirm-modal">&times;</span>
        <h2 id="confirm-modal-title">Confirmar Acción</h2>
        <p id="confirm-modal-message">¿Estás seguro de que deseas realizar esta acción?</p>
        <div class="password-container">
            <label for="confirm-password">Contraseña:</label>
            <input type="password" id="confirm-password" placeholder="Ingrese su contraseña" required>
            <button id="toggle-password" class="toggle-password-btn">
                <i class="fas fa-eye"></i>
            </button>
        </div>
        <button id="confirm-action-btn" class="confirm-btn">Confirmar</button>
    </div>
</div>


<!-- Modal para crear/editar usuarios -->
<div class="modal" id="user-modal">
    <div class="modal-content">
        <span class="close-modal" id="close-user-modal">&times;</span>
        <h2 id="modal-title">Crear Usuario</h2>
        <form id="user-form">
            <input type="hidden" id="user-id" name="id"> <!-- Campo oculto para el ID del usuario -->
            <label for="user-name">Nombre:</label>
            <input type="text" id="user-name" name="nombre" placeholder="Ingrese el nombre" required>

            <label for="user-lastname">Apellido:</label>
            <input type="text" id="user-lastname" name="apellido" placeholder="Ingrese el apellido" required>

            <label for="user-email">Correo:</label>
            <input type="email" id="user-email" name="correo" placeholder="Ingrese el correo" required>

            <!-- Campo de la cédula -->
            <label for="user-cedula">Cédula:</label>
            <input type="text" id="user-cedula" name="cedula" placeholder="Ingrese la cédula" required>

            <label for="user-password">Contraseña:</label>
            <input type="password" id="user-password" name="clave" placeholder="Ingrese la contraseña">

            <label for="user-confirm-password">Confirmar Contraseña:</label>
            <input type="password" id="user-confirm-password" name="confirmar_clave" placeholder="Confirme la contraseña">

            <label for="user-rol">Rol:</label>
            <select id="user-rol" name="rol" required disabled>
                <option value="1">Admin</option>
                <option value="2">SuperAdmin</option>
                <option value="3">Personal</option>
            </select>

            <div id="user-error-message" class="error-message" style="display: none;"></div>
            <button type="submit">Guardar</button>
        </form>
    </div>
</div>



<script>
document.getElementById('user-form').addEventListener('submit', function (e) {
    e.preventDefault(); // Evitar el envío tradicional del formulario

    const id = document.getElementById('user-id').value;
    const cedula = document.getElementById('user-cedula').value; // Cambiado a 'user-cedula'
    const clave = document.getElementById('user-password').value;
    const errorMessage = document.getElementById('user-error-message');

    // Limpiar mensajes de error anteriores
    errorMessage.textContent = '';
    errorMessage.style.display = 'none';

    // Validar la cédula (mínimo 6 dígitos, máximo 12 dígitos, solo números)
    if (!/^\d{6,12}$/.test(cedula)) {
        errorMessage.textContent = 'La cédula debe tener entre 6 y 12 dígitos y solo puede contener números.';
        errorMessage.style.display = 'block';
        return; // Detener el envío del formulario
    }

    // Validar la contraseña (mínimo 16 caracteres)
    if (clave && clave.length < 16) {
        errorMessage.textContent = 'La contraseña debe tener al menos 16 caracteres.';
        errorMessage.style.display = 'block';
        return; // Detener el envío del formulario
    }

    const formData = new FormData(this); // Obtener los datos del formulario

    // Determinar la URL del endpoint según si es creación o edición
    const url = id ? 'editar_usuario.php' : 'registro_usuario_be.php';

    fetch(url, {
        method: 'POST',
        body: formData,
    })
    .then(response => response.json()) // Esperar una respuesta JSON
    .then(data => {
        if (data.success) {
            // Si la operación fue exitosa, recargar la página para mostrar los cambios
            window.location.reload();
        } else {
            // Mostrar el mensaje de error en el modal
            errorMessage.textContent = data.message;
            errorMessage.style.display = 'block';
        }
    })
    .catch(error => {
        console.error('Error:', error);
        errorMessage.textContent = 'Ocurrió un error al enviar el formulario.';
        errorMessage.style.display = 'block';
    });
});

function cambiarEstadoUsuario(idUsuario, estadoActual) {
    // Solicitar la contraseña del administrador para confirmar la acción
    const contrasena = prompt("Por favor, ingrese su contraseña para confirmar el cambio de estado:");

    if (contrasena === null || contrasena.trim() === "") {
        alert("Debe ingresar una contraseña para continuar.");
        return;
    }

    // Enviar la solicitud al servidor
    fetch('cambiar_estado_usuario.php', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            idUsuario: idUsuario,
            estadoActual: estadoActual,
            contrasena: contrasena
        }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert(data.message);
            window.location.reload(); // Recargar la página para reflejar el cambio
        } else {
            alert(data.message); // Mostrar mensaje de error
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert("Ocurrió un error al cambiar el estado del usuario.");
    });
}

document.getElementById('create-user-btn').addEventListener('click', function () {
    // Cambiar el título del modal
    document.getElementById('modal-title').textContent = 'Crear Usuario';

    // Habilitar el campo de rol
    document.getElementById('user-rol').disabled = false;

    // Reiniciar el formulario
    reiniciarFormulario();

    // Mostrar el modal
    document.getElementById('user-modal').style.display = 'block';
});

function mostrarFormularioEdicion(id, nombre, apellido, correo, cedula, rol) {
    // Cambiar el título del modal
    document.getElementById('modal-title').textContent = 'Editar Usuario';

    // Llenar el formulario con los datos del usuario
    document.getElementById('user-id').value = id;
    document.getElementById('user-name').value = nombre;
    document.getElementById('user-lastname').value = apellido;
    document.getElementById('user-email').value = correo;
    document.getElementById('user-cedula').value = cedula;

    // Deshabilitar el campo de rol
    document.getElementById('user-rol').value = rol;
    document.getElementById('user-rol').disabled = true;

    // Limpiar los campos de contraseña
    document.getElementById('user-password').value = '';
    document.getElementById('user-confirm-password').value = '';

    // Mostrar el modal
    document.getElementById('user-modal').style.display = 'block';
}

function eliminarUsuario(idUsuario) {
    // Solicitar confirmación antes de eliminar
    if (confirm("¿Estás seguro de que deseas eliminar este usuario?")) {
        // Enviar la solicitud al servidor
        fetch('eliminar_usuario.php', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json', // Asegúrate de enviar JSON
            },
            body: JSON.stringify({
                id: idUsuario // Enviar el ID del usuario
            }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert(data.message);
                window.location.reload(); // Recargar la página para reflejar el cambio
            } else {
                alert(data.message); // Mostrar mensaje de error
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert("Ocurrió un error al eliminar el usuario.");
        });
    }
}
document.addEventListener('DOMContentLoaded', function () {
    const filterBtn = document.getElementById('filter-btn');
    const filterDropdown = document.getElementById('filter-dropdown');
    const applyFilterBtn = document.getElementById('apply-filter-btn');
    const filterRol = document.getElementById('filter-rol');
    const filterEstado = document.getElementById('filter-estado');
    const searchBar = document.getElementById('search-bar');

    filterBtn.addEventListener('click', function (event) {
        event.stopPropagation();
        filterDropdown.style.display = filterDropdown.style.display === 'block' ? 'none' : 'block';
    });

    document.addEventListener('click', function (event) {
        if (!filterBtn.contains(event.target) && !filterDropdown.contains(event.target)) {
            filterDropdown.style.display = 'none';
        }
    });

    applyFilterBtn.addEventListener('click', function () {
        cargarUsuarios();
        filterDropdown.style.display = 'none';
    });

    function cargarUsuarios() {
        const searchTerm = searchBar.value;
        const rol = filterRol.value;
        const estado = filterEstado.value;

        fetch(`get_usuarios.php?search=${encodeURIComponent(searchTerm)}&rol=${rol}&estado=${estado}`)
            .then(response => response.text())
            .then(data => {
                document.querySelector('.user-table tbody').innerHTML = data;
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    cargarUsuarios();
    searchBar.addEventListener('input', cargarUsuarios);
});
// Función para reiniciar el formulario
function reiniciarFormulario() {
    document.getElementById('user-form').reset();
    document.getElementById('user-id').value = '';
    document.getElementById('user-rol').disabled = false; // Habilitar el campo de rol
    document.getElementById('user-error-message').style.display = 'none';
}

// Cerrar el modal de usuario y reiniciar el formulario
document.getElementById('close-user-modal').onclick = function () {
    document.getElementById('user-modal').style.display = 'none';
    reiniciarFormulario();
};

// Cerrar el modal al hacer clic fuera del modal
window.onclick = function (event) {
    const userModal = document.getElementById('user-modal');
    if (event.target === userModal) {
        userModal.style.display = 'none';
        reiniciarFormulario();
    }
};

// Función para mostrar el modal de confirmación
function mostrarModalConfirmacion(idUsuario, estadoActual) {
    const confirmModal = document.getElementById('confirm-modal');
    const confirmMessage = document.getElementById('confirm-modal-message');
    const confirmActionBtn = document.getElementById('confirm-action-btn');
    const confirmPasswordInput = document.getElementById('confirm-password');
    const togglePasswordBtn = document.getElementById('toggle-password');

    // Configurar el mensaje del modal
    confirmMessage.textContent = estadoActual === 1 
        ? "¿Estás seguro de que deseas bloquear este usuario?" 
        : "¿Estás seguro de que deseas desbloquear este usuario?";

    // Mostrar el modal
    confirmModal.style.display = 'flex';

    // Configurar el botón de confirmación
    confirmActionBtn.onclick = function () {
        const contrasena = confirmPasswordInput.value;

        if (!contrasena) {
            alert("Debe ingresar una contraseña para continuar.");
            return;
        }

        // Enviar la solicitud al servidor
        fetch('cambiar_estado_usuario.php', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                idUsuario: idUsuario,
                estadoActual: estadoActual,
                contrasena: contrasena
            }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert(data.message);
                window.location.reload(); // Recargar la página para reflejar el cambio
            } else {
                alert(data.message); // Mostrar mensaje de error
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert("Ocurrió un error al cambiar el estado del usuario.");
        });

        // Cerrar el modal
        confirmModal.style.display = 'none';
    };

    // Botón para mostrar/ocultar contraseña
    togglePasswordBtn.onclick = function () {
        const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        confirmPasswordInput.setAttribute('type', type);
        togglePasswordBtn.innerHTML = type === 'password' ? '<i class="fas fa-eye"></i>' : '<i class="fas fa-eye-slash"></i>';
    };

    // Cerrar el modal al hacer clic en la X
    document.getElementById('close-confirm-modal').onclick = function () {
        confirmModal.style.display = 'none';
    };

    // Cerrar el modal al hacer clic fuera del modal
    window.onclick = function (event) {
        if (event.target === confirmModal) {
            confirmModal.style.display = 'none';
        }
    };
}

// Función para reiniciar el formulario
function reiniciarFormulario() {
    document.getElementById('user-form').reset();
    document.getElementById('user-id').value = '';
    document.getElementById('user-rol').disabled = false;
    document.getElementById('user-error-message').style.display = 'none';
}

// Cerrar el modal de usuario y reiniciar el formulario
document.getElementById('close-user-modal').onclick = function () {
    document.getElementById('user-modal').style.display = 'none';
    reiniciarFormulario();
};

// Cerrar el modal al hacer clic fuera del modal
window.onclick = function (event) {
    const userModal = document.getElementById('user-modal');
    if (event.target === userModal) {
        userModal.style.display = 'none';
        reiniciarFormulario();
    }
};
</script>
    <script src="../assets/js/main.js"></script>
</body>
</html>